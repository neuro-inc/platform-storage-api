apiVersion: apps/v1
kind: Deployment
metadata:
  name: platformstorageapi
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      service: platformstorageapi
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: platformstorageapi
      {{- if .Values.secrets }}
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
      {{- end }}
    spec:
      containers:
      - name: platformstorageapi
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /api/v1/ping
            port: tcp-web
          initialDelaySeconds: 10
          timeoutSeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/v1/ping
            port: tcp-web
          initialDelaySeconds: 10
          periodSeconds: 10
        ports:
          - containerPort: 8080
            name: tcp-web
            protocol: TCP
        {{- if .Values.resources }}
        resources: {{ toYaml .Values.resources | nindent 10 }}
        {{- end }}
        env:
        - name: NP_STORAGE_LOCAL_BASE_PATH
          value: /var/storage
        {{- if gt (len .Values.storages) 1 }}
        - name: NP_STORAGE_MODE
          value: multiple
        {{- end }}
        - name: NP_STORAGE_AUTH_URL
          value: {{ .Values.platform.authUrl }}
        - name: NP_STORAGE_AUTH_TOKEN
{{- if .Values.platform.token }}
{{ toYaml .Values.platform.token | indent 10 }}
{{- end }}
        - name: NP_PERMISSION_EXPIRATION_INTERVAL
          value: {{ .Values.permissionExpirationInterval | quote }}
        - name: NP_PERMISSION_FORGETTING_INTERVAL
          value: {{ .Values.permissionForgettingInterval | quote }}
        - name: NP_CLUSTER_NAME
          value: {{ .Values.platform.clusterName | quote }}
        - name: NP_STORAGE_API_KEEP_ALIVE_TIMEOUT
          value: {{ .Values.keepAliveTimeout | quote }}
        {{- if .Values.cors.origins }}
        - name: NP_CORS_ORIGINS
          value: {{ .Values.cors.origins | join "," }}
        {{- end }}
        {{- if .Values.zipkin }}
        - name: NP_ZIPKIN_URL
          value: {{ .Values.zipkin.url }}
        - name: NP_ZIPKIN_SAMPLE_RATE
          value: {{ .Values.zipkin.sampleRate | default 0 | quote }}
        {{- end }}
        {{- if .Values.sentry }}
        - name: NP_SENTRY_DSN
          value: {{ .Values.sentry.dsn }}
        - name: NP_SENTRY_CLUSTER_NAME
          value: {{ .Values.sentry.clusterName }}
        - name: NP_SENTRY_SAMPLE_RATE
          value: {{ .Values.sentry.sampleRate | default 0 | quote }}
        {{- end }}
        {{- if .Values.storages }}
        volumeMounts:
        {{- range $index, $storage := .Values.storages }}
        - name: storage-{{ $index }}
          {{- if $storage.path }}
          mountPath: /var/storage/extra{{ $storage.path }}
          {{- else }}
          mountPath: /var/storage/main
          {{- end }}
        {{- end }}
        {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets: {{ .toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      {{- if .Values.storages }}
      volumes:
      {{- range $index, $storage := .Values.storages }}
      - name: storage-{{ $index }}
        {{- if eq $storage.type "pvc" }}
        persistentVolumeClaim:
          claimName: {{ $storage.claimName }}
        {{- else if eq $storage.type "nfs" }}
        nfs:
          server: {{ $storage.server }}
          path: {{ .Values.exportPath }}
        {{- end }}
      {{- end }}
      {{- end }}
