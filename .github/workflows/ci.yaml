name: CI

on:
  push:
    branches: [master]
    tags: [v*.*, v*.*.*]
  pull_request:
    branches: [master]
  schedule:
  - cron: 0 4 * * *

jobs:

  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout commit
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - name: Install python
      uses: actions/setup-python@v5
      with:
        python-version: 3.9
    - name: Cache packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-py-3.9-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('setup.cfg') }}
    - name: Install dependencies
      run: make setup
    - name: Login to ghcr.io
      uses: docker/login-action@v3.3.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - name: Lint
      run: |
        echo "::add-matcher::.github/actionlint-matcher.json"
        make lint
    - name: Run unit tests
      run: make test_unit
    - name: Pull test images
      run: make docker_pull_test_images
    - name: Run integration tests
      run: make test_integration
    - name: Build Docker image
      run: make docker_build
    - name: Upload image artifact
      uses: neuro-inc/upload-image-action@v24.4.0
      with:
        image: platformstorageapi
        token: ${{ secrets.GITHUB_TOKEN }}

  approve:
    name: Approve bot PR
    runs-on: ubuntu-latest
    if: endsWith(github.actor, '[bot]')
    needs: test
    permissions:
      contents: write
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: metadata
      id: metadata
      if: github.actor == 'dependabot[bot]'
      uses: dependabot/fetch-metadata@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Enable auto-merge for bot PRs
      run: gh pr merge --auto --squash --delete-branch "$PR_URL"
      env:
        PR_URL: ${{ github.event.pull_request.html_url }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Create release
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    uses: neuro-inc/reuse/.github/workflows/release-service.yaml@v24.5.0
    with:
      image: platformstorageapi
      helm_charts: platform-storage

  deploy_dev:
    name: Deploy on dev
    needs: release
    uses: neuro-inc/reuse/.github/workflows/deploy-dev.yaml@v24.5.0
    with:
      helm_charts: platform-storage
      version: ${{ needs.release.outputs.version }}
