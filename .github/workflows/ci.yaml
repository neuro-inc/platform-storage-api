name: Continuous Integration

on:
  push:
  release:
    types: [published]
    tags:
      - artifactory/*

jobs:

#  test:
#    name: Run tests
#    runs-on: ubuntu-latest
#    env:
#      PIP_INDEX_URL: ${{ format('https://{0}:{1}@{2}/{0}/{3}', secrets.DEVPI_USER, secrets.DEVPI_PASS, secrets.DEVPI_HOST, secrets.DEVPI_INDEX) }}
#      IMAGE_REPO : ${{ format('{0}.dkr.ecr.{1}.amazonaws.com', secrets.AWS_ACCOUNT_ID, secrets.AWS_REGION) }}
#    steps:
#      - name: Checkout commit
#        uses: actions/checkout@v2
#      - name: Install python
#        uses: actions/setup-python@v2
#        with:
#          python-version: "3.7.7"
#      - name: Cache packages
#        uses: actions/cache@v1
#        with:
#          path: ~/.cache/pip
#          key: ${{ runner.os }}-py-3.7.7-${{ hashFiles('requirements-dev.txt') }}-${{ hashFiles('setup.py') }}
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_REGION }}
#      - name: Login to AWS ECR
#        uses: aws-actions/amazon-ecr-login@v1
#      - name: Lint
#        run: make lint
#      - name: Run unit tests
#        run: make test_unit
#      - name: Run integration tests
#        run: make test_integration

  deploy_dev:
    name: Deploy on dev
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    env:
      PIP_INDEX_URL: ${{ format('https://{0}:{1}@{2}/{0}/{3}', secrets.DEVPI_USER, secrets.DEVPI_PASS, secrets.DEVPI_HOST, secrets.DEVPI_INDEX) }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_CLUSTER_NAME: ${{ secrets.AWS_DEV_CLUSTER_NAME }}
      HELM_ENV: dev
      HELM_VERSION: ${{ secrets.HELM_VERSION }}
      CLOUD_PROVIDER: azure
    steps:
      - name: Checkout commit
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Push image to ECR
        run: make docker_push
      - name: Update kube config
        run: make eks_login
      - name: Install helm
        run: make _helm
      - name: Deploy to kubernetes
        run: make helm_deploy

  deploy_dev_azure:
    name: Deploy on dev
    runs-on: ubuntu-latest
#    needs: test
    if: github.ref == 'refs/heads/deploy-to-azure'
    env:
      PIP_INDEX_URL: ${{ format('https://{0}:{1}@{2}/{0}/{3}', secrets.DEVPI_USER, secrets.DEVPI_PASS, secrets.DEVPI_HOST, secrets.DEVPI_INDEX) }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      AZURE_DEV_ACR_NAME: ${{ secrets.AZURE_DEV_ACR_NAME }}
      AZURE_DEV_REGION: ${{ secrets.AZURE_DEV_REGION }}
      AZURE_DEV_RG_NAME: ${{ secrets.AZURE_DEV_RG_NAME }}
      CLUSTER_NAME: dev
      HELM_ENV: dev
      HELM_VERSION: ${{ secrets.HELM_VERSION }}
      CLOUD_PROVIDER: azure
    steps:
      - name: Checkout commit
        uses: actions/checkout@v2
      - name: Configure Azure credentials
        uses: azure/login@v1.1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: Login to Azure ACR
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_DEV_ACR_SERVER }}
          username: ${{ secrets.AZURE_DEV_ACR_USERNAME }}
          password: ${{ secrets.AZURE_DEV_ACR_PASSWORD }}
      - name: Push image to ECR
        run: make docker_push
      - name: Update kube config
        run: make aks_login
      - name: Install helm
        run: make _helm
      - name: Deploy to kubernetes
        run: make helm_deploy

  deploy_artifactory:
    name: Deploy on artifactory
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'release'
    env:
      PIP_INDEX_URL: ${{ format('https://{0}:{1}@{2}/{0}/{3}', secrets.DEVPI_USER, secrets.DEVPI_PASS, secrets.DEVPI_HOST, secrets.DEVPI_INDEX) }}
      ARTIFACTORY_DOCKER_REPO: ${{ secrets.ARTIFACTORY_DOCKER_REPO }}
      ARTIFACTORY_HELM_REPO: ${{ secrets.ARTIFACTORY_HELM_REPO }}
      ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
      ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
      HELM_VERSION: ${{ secrets.HELM_VERSION }}
    steps:
      - name: Checkout commit
        uses: actions/checkout@v2
      - name: Artifactory Docker Push
        run: make artifactory_docker_push
      - name: Artifactory Helm Push
        run: make artifactory_helm_push