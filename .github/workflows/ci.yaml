name: CI

on:
  push:
    branches: [master]
    tags: [v*.*, v*.*.*]
  pull_request:
    branches: [master]
  pull_request_target:
    branches: [master]
  schedule:
  - cron: 0 4 * * *

jobs:

  test:
    name: Run tests
    runs-on: ubuntu-latest
    if: |
      (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]') ||
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]')
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: us-east-1
    steps:
    - name: Checkout commit
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - name: Install python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9.9
    - name: Cache packages
      uses: actions/cache@v2.1.7
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-py-3.9.9-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('setup.cfg')
          }}
    - name: Install dependencies
      run: make setup
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Login to AWS ECR
      uses: aws-actions/amazon-ecr-login@v1
    - name: Lint
      run: |
        echo "::add-matcher::.github/actionlint-matcher.json"
        make lint
    - name: Run unit tests
      run: make test_unit
    - name: Run integration tests
      run: make test_integration
    - name: Build Docker image
      run: make docker_build
    - name: Upload image artifact
      uses: neuro-inc/upload-image-action@v21.9.2
      with:
        image: platformstorageapi
        token: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Create release
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    uses: neuro-inc/reuse/.github/workflows/release-service.yaml@v0.0.21
    with:
      image: platformstorageapi
      helm_charts: platform-storage

  deploy_dev:
    name: Deploy on dev
    environment: dev
    runs-on: ubuntu-latest
    needs: release
    steps:
    - name: Checkout commit
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Install Helm
      uses: azure/setup-helm@v2.0
      with:
        version: v3.7.0
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Update kube config
      run: aws eks --region us-east-1 update-kubeconfig --name aws-dev
    - name: Deploy to kubernetes
      run: |
        helm upgrade platform-storage \
          oci://ghcr.io/neuro-inc/helm-charts/platform-storage \
          --version ${{ needs.release.outputs.version }} \
          -f charts/platform-storage/values-dev.yaml \
          --namespace platform --install --wait --timeout 600s
      env:
        HELM_EXPERIMENTAL_OCI: '1'
