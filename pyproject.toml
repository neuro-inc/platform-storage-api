[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
name = "platform-storage-api"
version = "0.0.0"
description = "Apolo.us platform storage api"
readme = "README.md"
license = "Proprietary"
authors = ["Apolo.us"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
]

packages = [{ include = "platform_storage_api", from = "src" }]
include = ["src/platform_storage_api/__init__.py"]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
urllib3 = ">=1.26.11,<1.27"
aiobotocore = "2.22.0"
aiodns = "3.4.0"
aiofiles = "24.1.0"
aiohttp = "3.10.10"
apolo-kube-client = "25.2.6"
cbor = "1.0.0"
cchardet = "2.2.0a2"
fastapi = "0.115.12"
neuro-admin-client = "25.1.1"
neuro-auth-client = "22.6.1"
neuro-logging = "25.1.0"
prometheus-client = "0.21.1"
pydantic = "2.11.4"
uvicorn = "0.34.2"
uvloop = "0.21.0"

[tool.poetry.scripts]
platform-storage-api = "platform_storage_api.api:main"
platform-storage-metrics = "platform_storage_api.metrics:main"
platform-storage-worker = "platform_storage_api.worker:main"
platform-storage-admission-controller = "platform_storage_api.admission_controller.__main__:main"

[tool.poetry.group.dev.dependencies]
aioresponses = "0.7.8"
docker = "7.1.0"
mypy = "1.15.0"
pdbpp = "0.11.6"
pre-commit = "4.2.0"
pytest = "8.3.5"
pytest-aiohttp = "1.0.5"
pytest-asyncio = "0.26.0"
pytest-docker = "3.2.1"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = [
    "E", "F", "I", "C90", "UP", "B", "ASYNC", "N", "FBT", "A", "C4", "EM", "FA", "ICN",
    "G", "PIE", "T20", "PYI", "PT", "RET", "PTH"
]
ignore = [
    "PTH116",  # `os.stat()` should be replaced by `Path.stat()`, `Path.owner()`, or `Path.group()
    "PTH102", # `os.mkdir()` should be replaced by `Path.mkdir()
    "PTH104", # `os.rename()` should be replaced by `Path.rename()`
    "PTH106", # `os.rmdir()` should be replaced by `Path.rmdir()`
    "PTH108", # `os.unlink()` should be replaced by `Path.unlink()`
    "PTH115", # `os.readlink()` should be replaced by `Path.readlink()`
    "FA100",  # Add `from __future__ import annotations` to simplify `typing.Union` (ignore until py 3.11)
    "UP007"   #  Use `X | Y` for type annotations (ignore until py 3.11)
]

[tool.isort]
profile = "black"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER", "TESTS"]
known_first_party = ["platform_storage_api"]
known_tests = ["tests"]
combine_as_imports = true
lines_after_imports = 2

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
filterwarnings = [
    "error",
    "ignore::ResourceWarning",
    "ignore::DeprecationWarning:docker",
    "ignore::DeprecationWarning:aiohttp.helpers",
    "ignore::DeprecationWarning:jose.jwt",
    "ignore::DeprecationWarning:jose.jws",
    "ignore::DeprecationWarning:pkg_resources._vendor.pyparsing",
    "ignore:The loop argument is deprecated:DeprecationWarning:",
]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = true
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "aiofiles"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "aiohttp_security.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "cbor"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "jose"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "neuro_auth_client.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "uvloop"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "docker.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "prometheus_client.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "aiobotocore.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "botocore.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "apolo_kube_client.*"
ignore_missing_imports = true
